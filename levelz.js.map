{
  "version": 3,
  "sources": [
    "../../../../../opt/hostedtoolcache/node/20.12.1/x64/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "index.js",
    "src/block.js",
    "src/coordinate.js",
    "src/object.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "export { default as Coordinate } from './src/coordinate.js'\nexport { default as Coordinate2D } from './src/coordinate.js'\nexport { default as Coordinate3D } from './src/coordinate.js'\n\n// Block\nexport { default as Block } from './src/block.js'\n\n// LevelObject\nexport { default as LevelObject } from './src/object.js'",
    "/**\n * Represents a Block in a level.\n * @classdesc Block in LevelZ World\n */\nexport class Block {\n\n    /**\n     * The name of this block.\n     * @type {string}\n     */\n    name;\n\n    /**\n     * @private\n     */\n    #properties = {};\n    \n\n    /**\n     * Constructs a new Block.\n     * @param {string} name Name of the block\n     * @param {Map<string, any>} properties Properties of the block\n     */\n    constructor(name, properties) {\n        this.name = name\n        this.properties = properties\n    }\n\n    /**\n     * Gets the properties of this block.\n     * @returns {Map<string, any>} The properties of this block.\n     */\n    get properties() {\n        return structuredClone(this.#properties)\n    }\n\n    /**\n     * Returns the string representation of this block.\n     * @returns {string} The string representation of this block.\n     */\n    toString() {\n        let str = `${this.name}<`\n        for (const [key, value] of this.#properties) {\n            str += `${key}=${value}, `\n        }\n        str.slice(0, -2)\n        return str + '>'\n    }\n\n}",
    "/**\n * Represents an abstract Coordinate.\n * @abstract\n * @classdesc Abstract Coordinate for representation purposes\n */\nexport class Coordinate {\n    constructor() {\n        if (new.target === Coordinate)\n            throw new TypeError('Cannot instantiate abstract class')\n    }\n\n    /**\n     * Returns the magnitude of this Coordinate.\n     * @returns {number} The magnitude of this Coordinate.\n     */\n    get magnitude() {\n        throw new Error('Abstract method')\n    }\n}\n\n/**\n * Represents a 2D Coordinate.\n * @classdesc 2D Coordinates in LevelZ\n */\nexport class Coordinate2D extends Coordinate {\n    /**\n     * The X value for this 2D Coordinate.\n     * @type {number}\n     */\n    x;\n    \n    /**\n     * The Y value for this 2D Coordinate.\n     * @type {number}\n     */\n    y;\n\n    /**\n     * Constructs a new 2D Coordinate.\n     * @constructor\n     * @param {number} x The X Value\n     * @param {number} y The Y Value\n     */\n    constructor(x, y) {\n        super()\n        if (typeof(x) !== 'number' || typeof(y) !== 'number')\n            throw new SyntaxError('Invalid input')\n        \n        this.x = x\n        this.y = y\n    }\n    \n    get magnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y)\n    }\n\n    /**\n     * Returns the string representation of this 2D Coordinate.\n     * @returns {string} The string representation of this 2D Coordinate.\n     */\n    toString() {\n        return `[${this.x}, ${this.y}]`\n    }\n\n    // Statics\n\n    /**\n     * Returns a new 2D Coordinate with X and Y at `0`.\n     * @static\n     * @returns {Coordinate2D} The 2D Coordinate\n     */\n    static get zero() {\n        return new Coordinate2D(0, 0)\n    }\n\n    /**\n     * Converts a string to a 2D Coordinate.\n     * @static\n     * @param {string} str The string to convert \n     * @returns {Coordinate2D} The 2D Coordinate\n     */\n    static fromString(str) {\n        if (typeof(str) !== 'string')\n            throw new SyntaxError('Invalid input')\n        \n        let values = str.substring(1, str.length - 1).split(',')\n        return new Coordinate2D(Number(values[0].trim()), Number(values[1].trim()))\n    }\n\n}\n\n/**\n * Represents a 3D Coordinate.\n * @classdesc 3D Coordinates in LevelZ\n */\nexport class Coordinate3D extends Coordinate {\n\n    /**\n     * The X value for this 3D Coordinate.\n     * @type {number}\n     */\n    x;\n\n    /**\n     * The Y value for this 3D Coordinate.\n     * @type {number}\n     */\n    y;\n\n    /**\n     * The Z value for this 3D Coordinate.\n     * @type {number}\n     */\n    z;\n\n    /**\n     * Constructs a new 3D Coordinate.\n     * @param {number} x The X Value\n     * @param {number} y The Y Value\n     * @param {number} z The Z Value \n     */\n    constructor(x, y, z) {\n        super()\n        if (typeof(x) !== 'number' || typeof(y) !== 'number' || typeof(z) !== 'number')\n            throw new SyntaxError('Invalid input')\n        \n        this.x = x\n        this.y = y\n        this.z = z   \n    }\n\n    get magnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\n    }\n\n    /**\n     * Returns the string representation of this 3D Coordinate.\n     * @returns {string} The string representation of this 3D Coordinate.\n     */\n    toString() {\n        return `[${this.x}, ${this.y}, ${this.z}]`\n    }\n\n    // Statics\n\n    /**\n     * Returns a new 3D Coordinate with X, Y and Z at `0`.\n     * @static\n     * @returns {Coordinate3D} The 3D Coordinate\n     */\n    static get zero() {\n        return new Coordinate3D(0, 0, 0)\n    }\n\n    /**\n     * Converts a string to a 3D Coordinate.\n     * @static\n     * @param {string} str The string to convert \n     * @returns {Coordinate3D} The 3D Coordinate\n     */\n    static fromString(str) {\n        if (typeof(str) !== 'string')\n            throw new SyntaxError('Invalid input')\n        \n        let values = str.substring(1, str.length - 1).split(',')\n        return new Coordinate3D(Number(values[0].trim()), Number(values[1].trim()), Number(values[2].trim()))\n    }\n\n}",
    "import { Coordinate } from \"./coordinate.js\";\nimport { Block } from './block.js'\n\n/**\n * Utility Object for representing a Level Block and its Coordinate.\n * @classdesc Coordinate and Block in LevelZ World\n */\nexport class LevelObject {\n\n    /**\n     * The Block of this LevelObject.\n     * @type {Block}\n     */\n    block;\n\n    /**\n     * The Coordinate of this LevelObject.\n     * @type {Coordinate}\n     */\n    coordinate;\n\n    /**\n     * Constructs a new LevelObject.\n     * @constructor\n     * @param {Block} block The Block\n     * @param {Coordinate} coordinate The Coordinate\n     */\n    constructor(block, coordinate) {\n        this.block = block\n        this.coordinate = coordinate\n    }\n\n    /**\n     * Returns the string representation of this LevelObject.\n     * @returns {string} The string representation of this LevelObject.\n     */\n    toString() {\n        return `${this.block.toString()}: ${this.coordinate.toString()}`\n    }\n}"
  ]
}